name: Database Migrations (Production)

on:
  push:
    branches:
      - main
    paths:
      - "supabase/**"
  workflow_dispatch:

jobs:
  deploy-migrations:
    runs-on: ubuntu-latest

    env:
      # Supabase environment variables
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.PRODUCTION_DB_PASSWORD }}
      SUPABASE_PROJECT_ID: ${{ secrets.PRODUCTION_PROJECT_ID }}
      # Payload environment variables
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Supabase migration steps
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Run Supabase migrations for Production
        if: env.ACT != 'true'
        run: |
          supabase link
          supabase db push

      - name: Reset Supabase database for Local
        if: env.ACT == 'true'
        run: |
          supabase start
          supabase db reset

      # Payload migration steps
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run Payload migrations
        run: pnpm payload migrate

      # Notification steps
      - name: Notify on success
        if: success()
        run: echo "Database migrations completed successfully"

      - name: Notify on failure
        if: failure()
        run: echo "Database migrations failed"
